image: Visual Studio 2017
# Kept implicit due to test discovery problems
#platform:
#- Any CPU
environment:
  nuget_user:
    secure: kWtlS49bKmP0IFXmdvDHmxGI8mS0xQGrwiJoco9nYtA=
  nuget_password:
    secure: Pzvx2CQjxp8eCBP+nFI2eg==
  appveyor_rdp_password:
    secure: Pzvx2CQjxp8eCBP+nFI2eg==
configuration:
  - Debug
  - Release
version: 4.0.0.{build}
skip_tags: true
# skip branch build if there is an active pull request
skip_branch_with_pr: true
max_jobs: 8

init:
- cmd: echo Project - %APPVEYOR_PROJECT_NAME%
- cmd: echo Worker image - %APPVEYOR_BUILD_WORKER_IMAGE%
- cmd: echo Branch - %APPVEYOR_REPO_BRANCH%
- cmd: echo Author - %APPVEYOR_REPO_COMMIT_AUTHOR%
- cmd: echo Commit - %APPVEYOR_REPO_COMMIT%
- cmd: echo Configuration - %CONFIGURATION%
- cmd: echo Version - %APPVEYOR_BUILD_VERSION%
- cmd: IF NOT "%APPVEYOR_PULL_REQUEST_NUMBER%"=="" (SET VERSION_SUFFIX=-alpha) ELSE IF "%APPVEYOR_REPO_BRANCH%"=="develop" (SET VERSION_SUFFIX=-beta) ELSE IF NOT "%APPVEYOR_REPO_BRANCH%"=="master" (SET VERSION_SUFFIX=-alpha)
- cmd: echo Version suffix - %VERSION_SUFFIX%
#- ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

# Here comes automated git clone by AppVeyor

nuget:
  account_feed: false
  project_feed: false

install:
- cmd: C:\projects\platform-components\scripts\restore_nugets.bat

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "{version}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}$(version_suffix)'
  package_version: '{version}$(version_suffix)'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'

build:
  parallel: true
  project: .\src\platform-components.sln
  verbosity: quiet

after_test:
  - cmd: SET VALIDATOR=src\Spectre.DataValidatorApp\Spectre.DataValidatorApp.csproj
  - cmd: SET OPTIONS=--self-contained --verbosity quiet
  - cmd: dotnet publish %VALIDATOR% %OPTIONS% -r win10-x64
  - cmd: dotnet publish %VALIDATOR% %OPTIONS% -r win7-x86
  - cmd: dotnet publish %VALIDATOR% %OPTIONS% -r osx.10.11-x64
  - cmd: dotnet publish %VALIDATOR% %OPTIONS% -r ubuntu.16.10-x64
  - cmd: SET BINARIES=.\src\Spectre.DataValidatorApp\bin\%CONFIGURATION%\netcoreapp2.0\
  - cmd: SET PREFIX=DataValidator-%CONFIGURATION%-thin-
  - cmd: SET THIN=-xr!publish
  - cmd: 7z a %PREFIX%win10-x64.zip %THIN% %BINARIES%win10-x64 >nul 2>&1
  - cmd: 7z a %PREFIX%win7-x86.zip %THIN% %BINARIES%win7-x86 >nul 2>&1
  - cmd: 7z a %PREFIX%osx.10.11-x64.zip %THIN% %BINARIES%osx.10.11-x64 >nul 2>&1
  - cmd: 7z a %PREFIX%ubuntu.16.10-x64.zip %THIN% %BINARIES%ubuntu.16.10-x64 >nul 2>&1
  - cmd: rmdir /s /q C:\projects\platform-components\src\packages

artifacts:
- path: .\src\Spectre.DataValidatorApp\bin\$(configuration)\netcoreapp2.0\win10-x64\publish
  name: DataValidator-$(configuration)-self-contained-win10-x64
- path: .\src\Spectre.DataValidatorApp\bin\$(configuration)\netcoreapp2.0\win7-x86\publish
  name: DataValidator-$(configuration)-self-contained-win7-x86
- path: .\src\Spectre.DataValidatorApp\bin\$(configuration)\netcoreapp2.0\osx.10.11-x64\publish
  name: DataValidator-$(configuration)-self-contained-osx.10.11-x64
- path: .\src\Spectre.DataValidatorApp\bin\$(configuration)\netcoreapp2.0\ubuntu.16.10-x64\publish
  name: DataValidator-$(configuration)-self-contained-ubuntu.16.10-x64
#- path: .\docs\*.pdf
#  name: Manuals
- path: '**\*zip'
  name: Binaries-$(configuration)
- path: '**\*.nupkg'
  name: NugetPackages-$(configuration)

deploy:
  # push all packed apps to GitHub releases
  - provider: GitHub
    release: platform-components-v$(appveyor_build_version)
    auth_token:
      secure: dQadz+smqtuxpigZ/LmrUKyA0uVZ5kgljKntyoHEdobTycbeMywbfmiJtZPNcOQ2
    artifact: /.*\.zip/
    draft: true
  # push all NuGet-s to GitHub releases
  # overwrites Debug NuGets with Release ones
  - provider: GitHub
    release: platform-components-v$(appveyor_build_version)
    auth_token:
      secure: dQadz+smqtuxpigZ/LmrUKyA0uVZ5kgljKntyoHEdobTycbeMywbfmiJtZPNcOQ2
    artifact: /.*\.nupkg/
    draft: true
  # push all manuals to GitHub releases
  - provider: GitHub
    release: platform-components-v$(appveyor_build_version)
    auth_token:
      secure: dQadz+smqtuxpigZ/LmrUKyA0uVZ5kgljKntyoHEdobTycbeMywbfmiJtZPNcOQ2
    artifact: Manuals
    on:
      branch:
        - master
        - develop
      configuration: Release
    draft: true
  # push all NuGet-s to our feed
  - provider: NuGet
    server: https://ci.appveyor.com/nuget/gmrukwa-xfn7vhwq20u6
    api_key:
      secure: t8FO9T5wMCmRVqjBKL+8u6wmF+EPGJ8NDgcZoH7hbk4=
    skip_symbols: true
    symbol_server: https://ci.appveyor.com/nuget/gmrukwa-xfn7vhwq20u6
    artifact: /.*\.nupkg/
    on:
      configuration: Release

on_finish:
#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

notifications:
# this publishes to Continuous Integration channel in Glip
- provider: Webhook
  url:
    secure: V16hjhyXfcLNyhNUih9v1Lb4wDly5r6CNNufciMrvllwt0m0rkguf6o4DY7pbdKia/vJGmErvQLdEW0MkzqsAhLWiPY7+Z6qvzFjweP8xNg=
  method: POST
  content_type: application/json
  body: >-
    {
      "icon": "https://www.appveyor.com/assets/img/appveyor-logo-256.png",
      "activity": "AppVeyor for platform-components",
      "title": "Build {{buildVersion}} **{{#failed}}failed{{/failed}}{{#passed}}passed{{/passed}}** in {{duration}}",
      "body": "{{#isPullRequest}}Pull request: [#{{pullRequestId}}](https://github.com/spectre-team/platform-components/pull/{{pullRequestId}})\n{{/isPullRequest}}Branch: [{{branch}}](https://github.com/spectre-team/platform-components/tree/{{branch}})\nCommit: [{{commitId}} {{commitMessage}}](https://github.com/spectre-team/platform-components/commit/{{commitId}})\nAuthor: {{commitAuthor}}\n[Build details]({{buildUrl}})"
    }
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: true
